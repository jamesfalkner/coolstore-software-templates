kind: ConfigMap
metadata:
  name:  {{ .Values.app.name }}-webhook-script
apiVersion: v1
data:
  playbook.yaml: |
    - hosts: localhost
      vars:
        git_host: {{ .Values.git.host }}
        git_project: {{ .Values.git.name }}
        git_token_secret: {{ .Values.git.token }}
        webhook_url: https://webhook-{{ .Values.app.name }}-el-{{ .Values.app.namespace }}{{ .Values.app.cluster }}
        webhook_secret: {{ .Values.git.webhookSecret }}

      tasks:      
        - name: Retrieve private token
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Secret
            name: git-token
            namespace: {{ .Values.app.namespace }}
          register: r_token

        - name: Decode git token
          set_fact:
            git_token_secret: '{{ "{{" }} r_token.resources[0].data.token | b64decode {{ "}}" }}'
  
        - name: Retrieve private secret (web-hook)
          kubernetes.core.k8s_info:
            api_version: v1
            kind: Secret
            name: {{ .Values.app.name }}-webhook-secret
            namespace: {{ .Values.app.namespace }}
          register: r_pass

        - name: Decode git secret
          set_fact:
            webhook_secret: '{{ "{{" }} r_pass.resources[0].data.password | b64decode {{ "}}" }}'

        - name: Get gitlab projects
          ansible.builtin.uri:
            url: https://{{ "{{" }} git_host {{ "}}" }}/api/v4/projects
            method: GET
            body_format: form-urlencoded
            headers:
              PRIVATE-TOKEN: '{{ "{{" }} git_token_secret {{ "}}" }}'
            validate_certs: false
            status_code: [200]
          register: r_git_projects

        - name: set gitlab projects id
          set_fact:
            git_project_id: '{{ "{{" }} r_git_projects.json | json_query(query) {{ "}}" }}'
          vars:
            query: {{ "\"" }}[?name=='{{ "{{" }} git_project {{ "}}" }}'].id{{ "\"" }}

        - name: Create {{ "{{" }} git_project {{ "}}" }} web hook
          ansible.builtin.uri:
            url: https://{{ "{{" }} git_host {{ "}}" }}/api/v4/projects/{{ "{{" }} git_project_id[0] {{ "}}" }}/hooks
            method: POST
            body_format: form-urlencoded
            body:
              url: '{{ "{{" }} webhook_url {{ "}}" }}'
              push_events: true
              tag_push_events: true
              token: '{{ "{{" }} webhook_secret {{ "}}" }}'
            headers:
              PRIVATE-TOKEN: '{{ "{{" }} git_token_secret {{ "}}" }}'
            validate_certs: false
            status_code: [201]

        - name: Create git issue in {{ "{{" }} git_project {{ "}}" }} 
          ansible.builtin.uri:
            url: https://{{ "{{" }} git_host {{ "}}" }}/api/v4/projects/{{ "{{" }} git_project_id[0] {{ "}}" }}/issues
            method: POST
            body_format: form-urlencoded
            body:
              "state" : "opened"
              "title" : "Update this"
              "description" : "Change the title"
              "weight": null
            headers:
              PRIVATE-TOKEN: '{{ "{{" }} git_token {{ "}}" }}'
            validate_certs: false
            status_code: [201]
